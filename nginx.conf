worker_processes  auto;
worker_cpu_affinity auto;
worker_rlimit_nofile 65535;
events {
    # Allows up to 1024 connections, can be adjusted
    worker_connections  1024;
    accept_mutex off;
}
# RTMP configuration
rtmp {
    server {
        listen 1935; # Listen on standard RTMP port
        chunk_size 10000;
         access_log off;

            application sd {
            live on; # Allows live input from above
            hls on; # Enable HTTP Live Streaming

            # Pointing this to an SSD is better as this involves lots of IO
            hls_path /mnt/sd/hls/;
            hls_continuous off;
            hls_cleanup on;
            hls_fragment 4s;
            hls_playlist_length 10m;
            hls_nested on;
            hls_fragment_naming system;

            # Instruct clients to adjust resolution according to bandwidth
            hls_variant _240p BANDWIDTH=212000,RESOLUTION=426x240; # Medium bitrate, SD resolution
            hls_variant _360p BANDWIDTH=320000,RESOLUTION=640x360; # High bitrate, higher-than-SD resolution
            hls_variant _480p BANDWIDTH=464000,RESOLUTION=854x480; # High bitrate, HD 720p resolution
            hls_variant _720p BANDWIDTH=964000,RESOLUTION=1280x720; # Source bitrate, source resolution

            # MPEG-DASH is similar to HLS
            dash on;
            dash_nested on;
            dash_repetition on;
            dash_path /mnt/sd/dash/;
            dash_fragment 4; # 4 second is generaly a good choice for live
            dash_playlist_length 30; # keep 120s of tail
            dash_cleanup on;
            dash_variant _240p bandwidth="212000" width="426" height="240";
            dash_variant _360p bandwidth="464000" width="640" height="360";
            dash_variant _480p bandwidth="664000" width="854" height="480";
            dash_variant _720p bandwidth="964000" width="1280" height="720" max;
        }

            application sd-dvr {
            live on; # Allows live input from above
            hls on; # Enable HTTP Live Streaming

            # Pointing this to an SSD is better as this involves lots of IO
            hls_path /mnt/sd/dvr/;
            hls_continuous off;
            hls_cleanup on;
            hls_fragment 4s;
            hls_nested on;
            hls_fragment_naming system;

            # Instruct clients to adjust resolution according to bandwidth
            hls_variant _240p BANDWIDTH=212000,RESOLUTION=320x180; # Medium bitrate, SD resolution
            hls_variant _360p BANDWIDTH=320000,RESOLUTION=480x270; # High bitrate, higher-than-SD resolution
            hls_variant _480p BANDWIDTH=464000,RESOLUTION=640x360; # High bitrate, HD 720p resolution
            hls_variant _720p BANDWIDTH=964000,RESOLUTION=960x540; # Source bitrate, source resolution

        }

        # This application is for splitting the stream into HLS fragments
        application hd {
            live on; # Allows live input from above
            hls on; # Enable HTTP Live Streaming

            # Pointing this to an SSD is better as this involves lots of IO
            hls_path /mnt/hd/hls/;
            hls_continuous on;
            hls_cleanup on;
            hls_fragment 4s;
            hls_playlist_length 10m;
            hls_nested on;
            hls_fragment_naming system;

            # Instruct clients to adjust resolution according to bandwidth
            hls_variant _240p BANDWIDTH=212000,RESOLUTION=426x240; # Medium bitrate, SD resolution
            hls_variant _360p BANDWIDTH=320000,RESOLUTION=640x360; # High bitrate, higher-than-SD resolution
            hls_variant _480p BANDWIDTH=464000,RESOLUTION=854x480; # High bitrate, HD 720p resolution
            hls_variant _720p BANDWIDTH=964000,RESOLUTION=1280x720; # Source bitrate, source resolution
	    hls_variant _1080p BANDWIDTH=1628000,RESOLUTION=1920x1080; # Source bitrate, source resolution
	    
	    # MPEG-DASH is similar to HLS
            dash on;
            dash_nested on;
            dash_repetition on;
            dash_path /mnt/hd/dash/;
            dash_fragment 4; # 4 second is generaly a good choice for live
            dash_playlist_length 30; # keep 120s of tail
            dash_cleanup on;
            dash_variant _240p bandwidth="212000" width="426" height="240";
            dash_variant _360p bandwidth="464000" width="640" height="360";
            dash_variant _480p bandwidth="664000" width="854" height="480";
            dash_variant _720p bandwidth="964000" width="1280" height="720";
            dash_variant _1080p bandwidth="1628000" width="1920" height="1080" max;


	}

        # This application is for splitting the stream into HLS fragments
        application hd-dvr {
            live on; # Allows live input from above
            hls on; # Enable HTTP Live Streaming

            # Pointing this to an SSD is better as this involves lots of IO
            hls_path /mnt/hd/dvr/;
	    hls_continuous on;
            hls_cleanup on;
            hls_fragment 4s;
            hls_nested on;
            hls_fragment_naming system;

            # Instruct clients to adjust resolution according to bandwidth
            hls_variant _180p BANDWIDTH=212000,RESOLUTION=320x180; # Medium bitrate, SD resolution
            hls_variant _270p BANDWIDTH=320000,RESOLUTION=480x270; # High bitrate, higher-than-SD resolution
            hls_variant _360p BANDWIDTH=464000,RESOLUTION=640x360; # High bitrate, HD 720p resolution
            hls_variant _480p BANDWIDTH=664000,RESOLUTION=854x480; # Source bitrate, source resolution
            hls_variant _540p BANDWIDTH=964000,RESOLUTION=960x540; # Source bitrate, source resolution
            hls_variant _720p BANDWIDTH=1628000,RESOLUTION=1280x720; # Source bitrate, source resolution
        }

    }
}

http {
    # This optimizes the server for HLS fragment delivery

    #access_log  off;
    sendfile on;
    tcp_nopush on;

    # HTTP server required to serve the player and HLS fragments
    server {
        listen 80;

        location /stat {
        rtmp_stat all;
        rtmp_stat_stylesheet stat.xsl;
       }

        location /stat.xsl {
        root html;
       }

       location /control {
        rtmp_control all;

        # Enable CORS
        add_header Access-Control-Allow-Origin * always;
       }

        location / {
            types {
                application/vnd.apple.mpegurl m3u8;
                application/dash+xml mpd;
                video/MP2T ts;
                video/mp4 mp4;
            }
            root /mnt/;
           #aio threads;
            add_header Cache-Control no-cache; # Prevent caching of HLS fragments
            add_header Access-Control-Allow-Origin *; # Allow web player to access our playlist
        }
      }
    }

